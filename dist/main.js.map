{"version":3,"file":"main.js","mappings":"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","sources":["webpack://Project/./src/ball.js","webpack://Project/./src/hoop.js","webpack://Project/./src/input.js","webpack://Project/./src/index.js"],"sourcesContent":["export default class Ball {\n\n    constructor() {\n\n        this.position = {\n            x: 157,\n            y: 510,\n        }\n\n        this.xarrow = 0;\n        this.rot = 1;\n        this.size = 86;\n        this.speed = -21.5;      // -20.8\n        this.xspeed = 0;\n        // this.yspeed = 0;\n        this.yspeed = -(((this.speed**2) - (this.xspeed**2))**(0.5));\n        // this.maxSpeed = 5;\n        this.gravity = 0.56;\n        this.x = this.position.x;\n        this.y = this.position.y;\n    }\n\n    // clearArc(context, x, y, radius) {\n    //     context.save();\n    //     context.globalCompositeOperation = 'destination-out';\n    //     context.beginPath();\n    //     context.arc(x, y, radius, 0, 2 * Math.PI, false);\n    //     context.fill();\n    //     context.restore();\n    //   }\n\n    drawBall(ctx) {\n        const ball = new Image();\n        ball.src = \"./assets/ball.jpg\";\n        ball.onload = () => {\n            // 157, 475\n            if (this.rot === -1) ctx.clearRect(0, 300, 400, 300);\n            //ctx.rotate(Math.PI / 2);\n            ctx.drawImage(ball, this.position.x + this.xspeed, this.position.y + this.yspeed, this.size, this.size);\n        }\n\n    }\n\n    drawArrow(ctx) {\n        ctx.strokeStyle = 'blue';\n        ctx.lineWidth = 1;\n        ctx.beginPath();\n        ctx.moveTo(this.position.x + 46 + this.xarrow, this.position.y - 47); // 203, 425\n        ctx.lineTo(this.position.x + 46, this.position.y - 20); // 203, 456   490\n        ctx.stroke();\n\n        ctx.strokeStyle = 'blue';\n        ctx.lineWidth = 1;\n        ctx.beginPath();\n        ctx.moveTo(this.position.x + 46 + this.xarrow, this.position.y - 47); // 203, 425\n        ctx.lineTo(this.position.x + 41, this.position.y - 35); // 203, 456\n        ctx.stroke();\n\n        ctx.strokeStyle = 'blue';\n        ctx.lineWidth = 1;\n        ctx.beginPath();\n        ctx.moveTo(this.position.x + 46 + this.xarrow, this.position.y - 47); // 203, 425\n        ctx.lineTo(this.position.x + 51, this.position.y - 35); // 203, 456\n        ctx.stroke();\n    }\n\n    shoot() {\n        // ctx.clearRect(0, 300, 400, 300);\n        this.rot = -1;\n        this.position.y += this.yspeed;\n        this.yspeed += this.gravity;\n        this.position.x += this.xspeed;\n\n        if (this.yspeed < 0) {\n            this.size -= 0.8;\n            this.position.x += 0.5;\n        }\n    }\n\n    left(ctx) {\n        ctx.clearRect(150, 454, 150, 34.8);\n        if (this.xspeed >= -10.2) {\n            this.xspeed -= 0.3;\n            this.xarrow -= 1;\n            this.yspeed = -(((this.speed**2) - (this.xspeed**2))**(0.5));\n        }\n        this.drawArrow(ctx);\n        // console.log(this.xspeed);\n        // console.log(this.yspeed);\n    }\n\n    right(ctx) {\n        ctx.clearRect(150, 454, 150, 34.8);\n        if (this.xspeed <= 10.2) {\n            this.xspeed += 0.3;\n            this.xarrow += 1;\n            this.yspeed = -(((this.speed**2) - (this.xspeed**2))**(0.5));\n        }\n        this.drawArrow(ctx);\n        // console.log(this.xspeed);\n        // console.log(this.yspeed);\n    }\n\n    // shoot() {\n    //     if (this.position.y < 80) {\n    //         this.speed = -this.speed;\n    //     }\n    //     this.position.y += this.speed;\n\n    //     if (this.speed === -5) {\n    //         this.size -= 0.35;\n    //         this.position.x += 0.21;\n    //     }\n    // }\n\n}","export default class Hoop {\n\n    constructor(gameHeight, gameWidth) {\n\n        this.position = {\n            x: 55,\n            y: 70,\n        }\n\n        this.speed = 20;\n    }\n\n    drawHoop(ctx) {\n        const board = new Image();\n        board.src = \"./assets/backboard.jpg\";\n        const side1 = new Image();\n        side1.src = \"./assets/side.jpg\";\n        \n        side1.onload = () => {\n            //tx.clearRect(0, 0, 400, 300); \n            ctx.drawImage(side1, this.position.x + 112, this.position.y + 143, 5, 5);\n        }\n        const side2 = new Image();\n        side2.src = \"./assets/side.jpg\";\n        side2.onload = () => {\n            ctx.drawImage(side2, this.position.x + 183, this.position.y + 143, 5, 5);\n        }\n        board.onload = () => {\n            ctx.clearRect(0, 0, 400, 300);\n            ctx.drawImage(board, this.position.x, this.position.y, 300, 200);\n        }\n    }\n\n\n    updateHoop(deltaTime) {\n        if (!deltaTime) return;\n        if (this.position.x + 110 <= 0 || this.position.x + 190 >= 400) {\n            this.speed = -this.speed;\n        }\n        this.position.x += this.speed / deltaTime;\n    }\n\n    xpos() {\n        return this.position.x;\n    }\n\n    ypos() {\n        return this.position.y;\n    }\n}\n","import Ball from \"./ball\";\n\nexport default class Input {\n\n    constructor(ball, ctx) {\n\n        let shouldHandleKeyDown = true;\n\n        document.addEventListener(\"keydown\", event => {\n            switch(event.keyCode) {\n                case 37: \n                    ball.left(ctx);\n                    break;\n\n                case 39: \n                    ball.right(ctx);\n                    break\n\n                case 32:\n                    let lastTime = 0;\n                    if (!shouldHandleKeyDown) return;\n                    shouldHandleKeyDown = false;\n                    // ctx.clearRect(0, 300, 400, 600);\n                    function gameLoop(timestamp) {\n                        // ctx.clearRect(0, 300, 400, 600);\n                        let deltaTime = timestamp - lastTime;\n                        lastTime = timestamp;\n                        \n                        // ball.drawArrow(ctx);\n                        ball.drawBall(ctx);\n                        ball.shoot(deltaTime);\n\n                        requestAnimationFrame(gameLoop);\n                    }\n                    gameLoop();\n                    break;\n            }\n\n        })\n    }\n}\n","import Ball from \"./ball\";\nimport Hoop from \"./hoop\";\nimport Input from \"./input\";\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    let canvas = document.getElementById(\"game-canvas\");\n    let ctx = canvas.getContext(\"2d\");\n    \n    const GAME_WIDTH = 400;\n    const GAME_HEIGHT = 600;\n\n    //ctx.clearRect(0, 0, GAME_WIDTH, GAME_HEIGHT);\n    \n    let hoop = new Hoop(GAME_HEIGHT, GAME_WIDTH);\n    let ball = new Ball();\n    new Input(ball, ctx);\n\n    // function arrow() {\n    //     const arrow = new Image();\n    //     arrow.src = \"./assets/arrow2.jpg\"\n    //     arrow.onload = () => {\n    //         // ctx.clearRect(0, 300, 400, 300);\n    //         // 185, 405\n    //         ctx.drawImage(arrow, 185, 405, 35, 50);\n    //     }\n    // }\n\n    // ctx.rect(185, 350, 50, 50);\n    // ctx.fill();\n    ball.drawBall(ctx);\n    // ctx.save();\n    // ctx.translate(202.5, 430);\n    // ctx.rotate(90 * Math.PI / 180);\n    // ctx.translate(-202.5, -430);\n    ball.drawArrow(ctx);\n    // ctx.rect(185, 350, 50, 50);\n    // ctx.fill();\n    // ctx.restore();\n    // let arrow = ball.drawArrow(ctx);\n\n    let lastTime = 0;\n    function gameLoop(timestamp) {\n        // ctx.clearRect(0, 200, GAME_WIDTH, GAME_HEIGHT);\n        let deltaTime = timestamp - lastTime;\n        lastTime = timestamp;\n\n        // ball.drawBall(ctx);\n        // ball.drawArrow(ctx);\n        hoop.drawHoop(ctx);\n        hoop.updateHoop(deltaTime);\n\n\n\n        requestAnimationFrame(gameLoop);\n    }\n\n    gameLoop();\n\n\n    \n    // const arrow = new Image();\n    // arrow.src = \"./assets/arrow2.jpg\"\n    // arrow.onload = () => {\n    //     // ctx.clearRect(0, 300, 400, 300);\n    //     // 185, 405\n    //     ctx.drawImage(arrow, 185, 405, 35, 50);\n    // }\n    // ctx.restore();\n});"],"names":["Ball","this","position","x","y","xarrow","rot","size","speed","xspeed","yspeed","gravity","ctx","ball","Image","src","onload","clearRect","drawImage","strokeStyle","lineWidth","beginPath","moveTo","lineTo","stroke","drawArrow","Hoop","gameHeight","gameWidth","board","side1","side2","deltaTime","Input","shouldHandleKeyDown","document","addEventListener","event","keyCode","left","right","lastTime","gameLoop","timestamp","drawBall","shoot","requestAnimationFrame","getElementById","getContext","hoop","drawHoop","updateHoop"],"sourceRoot":""}
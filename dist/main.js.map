{"version":3,"file":"main.js","mappings":"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","sources":["webpack://Project/./src/ball.js","webpack://Project/./src/hoop.js","webpack://Project/./src/input.js","webpack://Project/./src/index.js"],"sourcesContent":["export default class Ball {\n\n    constructor() {\n\n        this.position = {\n            x: 157,\n            y: 510,\n        }\n\n        this.xarrow = 0;\n        this.rot = 1;\n        this.size = 86;\n        this.speed = -21.5;      // -20.8\n        this.xspeed = 0;\n        // this.yspeed = 0;\n        this.yspeed = -(((this.speed**2) - (this.xspeed**2))**(0.5));\n        // this.maxSpeed = 5;\n        this.gravity = 0.56;\n        this.x = 0;\n        this.y = 0;\n        this.elas = 0.2\n        this.afterCollSize = 0;\n    }\n\n    // clearArc(context, x, y, radius) {\n    //     context.save();\n    //     context.globalCompositeOperation = 'destination-out';\n    //     context.beginPath();\n    //     context.arc(x, y, radius, 0, 2 * Math.PI, false);\n    //     context.fill();\n    //     context.restore();\n    //   }\n\n    drawBall(ctx) {\n        const ball = new Image();\n        ball.src = \"./assets/ball.jpg\";\n        ball.onload = () => {\n            // 157, 475\n            if (this.rot === -1) ctx.clearRect(0, 300, 400, 300);\n            //ctx.rotate(Math.PI / 2);\n            ctx.drawImage(ball, this.position.x + this.xspeed, this.position.y + this.yspeed, this.size, this.size);\n        }\n        this.x = this.position.x + this.xspeed;\n        this.y = this.position.y + this.yspeed;\n    }\n\n    drawArrow(ctx) {\n\n        // let y = ((729 - (this.xarrow**2))**(0.5));\n        ctx.strokeStyle = 'blue';\n        ctx.lineWidth = 1;\n        ctx.beginPath();\n        ctx.moveTo(this.position.x + 46 + this.xarrow, this.position.y - 37); // 47\n        ctx.lineTo(this.position.x + 46, this.position.y - 20); // 203, 456   490\n        ctx.stroke();\n\n    //     ctx.strokeStyle = 'blue';\n    //     ctx.lineWidth = 1;\n    //     ctx.beginPath();\n    //     ctx.moveTo(this.position.x + 46 + this.xarrow, this.position.y - 47); // 203, 425\n    //     ctx.lineTo(this.position.x + 41, this.position.y - 35); // 203, 456\n    //     ctx.stroke();\n\n    //     ctx.strokeStyle = 'blue';\n    //     ctx.lineWidth = 1;\n    //     ctx.beginPath();\n    //     ctx.moveTo(this.position.x + 46 + this.xarrow, this.position.y - 47); // 203, 425\n    //     ctx.lineTo(this.position.x + 51, this.position.y - 35); // 203, 456\n    //     ctx.stroke();\n\n    }\n\n    shoot() {\n        // ctx.clearRect(0, 300, 400, 300);\n        this.rot = -1;\n        this.position.y += this.yspeed;\n        this.yspeed += this.gravity;\n        this.position.x += this.xspeed;\n\n        if (this.yspeed < 0) {\n            this.size -= 0.8 + this.afterCollSize;\n            this.position.x += 0.5;\n        }\n    }\n\n    left(ctx) {\n        ctx.clearRect(150, 454, 150, 34.8);\n        if (this.xspeed >= -10.2) {\n            this.xspeed -= 0.3;\n            this.xarrow -= 0.44; // 0.7\n            this.yspeed = -(((this.speed**2) - (this.xspeed**2))**(0.5));\n        }\n        this.drawArrow(ctx);\n\n        // console.log(this.xarrow);\n\n        // console.log(this.xspeed);\n        // console.log(this.yspeed);\n    }\n\n    right(ctx) {\n        ctx.clearRect(150, 454, 150, 34.8);\n        if (this.xspeed <= 10.2) {\n            this.xspeed += 0.3;\n            this.xarrow += 0.44; // 0.7\n            this.yspeed = -(((this.speed**2) - (this.xspeed**2))**(0.5));\n        }\n        this.drawArrow(ctx);\n\n        // console.log(this.xarrow);\n\n        // console.log(this.xspeed);\n        // console.log(this.yspeed);\n    }\n\n    speedy() {\n        return this.yspeed;\n    }\n\n    collisionSpeedy() {\n        this.yspeed -= this.yspeed * this.elas;\n        this.yspeed = -this.yspeed;\n        this.afterCollSize = -0.8;\n    }\n\n    xpos() {\n        return this.x;\n    }\n\n    ypos() {\n        return this.y;\n    }\n\n    ballSize() {\n        return this.size;\n    }\n\n}","export default class Hoop {\n\n    constructor(gameHeight, gameWidth) {\n\n        this.position = {\n            x: 55,\n            y: 70,\n        }\n\n        this.x = this.position.x + 111;\n        this.y = this.position.y + 143;\n        this.speed = 20;\n    }\n\n    drawHoop(ctx) {\n        const board = new Image();\n        board.src = \"./assets/backboard.jpg\";\n        const side1 = new Image();\n        side1.src = \"./assets/side.jpg\";\n        \n        side1.onload = () => {\n            //tx.clearRect(0, 0, 400, 300); \n            ctx.drawImage(side1, this.position.x + 111, this.position.y + 143, 5, 5);\n        }\n        const side2 = new Image();\n        side2.src = \"./assets/side.jpg\";\n        side2.onload = () => {\n            ctx.drawImage(side2, this.position.x + 184, this.position.y + 143, 5, 5);\n        }\n        board.onload = () => {\n            ctx.clearRect(0, 0, 400, 300);\n            ctx.drawImage(board, this.position.x, this.position.y, 300, 200);\n        }\n    }\n\n\n    updateHoop(deltaTime) {\n        if (!deltaTime) return;\n        if (this.position.x + 110 <= 0 || this.position.x + 190 >= 400) {\n            this.speed = -this.speed;\n        }\n        this.position.x += this.speed / deltaTime;\n\n        this.x = this.position.x + 111;\n        // this.y = this.position.y + 143;\n    }\n\n    xpos() {\n        return this.x;\n    }\n\n    ypos() {\n        return this.y;\n    }\n}\n","// import Ball from \"./ball\";\n\nexport default class Input {\n\n    constructor(ball, hoop, ctx) {\n\n        let shouldHandleKeyDown = true;\n\n        document.addEventListener(\"keydown\", event => {\n            switch(event.keyCode) {\n                case 37: \n                    ball.left(ctx);\n                    break;\n\n                case 39: \n                    ball.right(ctx);\n                    break\n\n                case 32:\n                    let lastTime = 0;\n                    if (!shouldHandleKeyDown) return;\n                    shouldHandleKeyDown = false;\n                    // ctx.clearRect(0, 300, 400, 600);\n                    function gameLoop(timestamp) {\n                        // ctx.clearRect(0, 300, 400, 600);\n                        let deltaTime = timestamp - lastTime;\n                        lastTime = timestamp;\n                        \n                        // ball.drawArrow(ctx);\n                        ball.drawBall(ctx);\n                        ball.shoot(deltaTime);\n\n                        if (ball.speedy() >= 0 && hoop.ypos() <= ball.ypos() + ball.ballSize() \n                        && ball.ypos() + ball.ballSize() <= hoop.ypos() + 5\n                        && hoop.xpos() - 5 <= ball.xpos() + ball.ballSize()/2 && \n                        ball.xpos() + ball.ballSize()/2 <= hoop.xpos() + 10) {\n                            ball.collisionSpeedy();\n                        }\n\n                        if (ball.speedy() >= 0 && hoop.ypos() <= ball.ypos() + ball.ballSize() \n                        && ball.ypos() + ball.ballSize() <= hoop.ypos() + 5\n                        && hoop.xpos() + 68 <= ball.xpos() + ball.ballSize()/2 && \n                        ball.xpos() + ball.ballSize()/2 <= hoop.xpos() + 83) {\n                            ball.collisionSpeedy();\n                        }\n\n                        // console.log(ball.ypos() + ball.ballSize());\n                        // console.log(ball.xpos() + ball.ballSize()/2);\n                        // console.log(hoop.xpos());\n                        // console.log(\"hi\");\n\n                        requestAnimationFrame(gameLoop);\n                    }\n                    gameLoop();\n                    break;\n            }\n\n        })\n    }\n}\n","import Ball from \"./ball\";\nimport Hoop from \"./hoop\";\nimport Input from \"./input\";\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    let canvas = document.getElementById(\"game-canvas\");\n    let ctx = canvas.getContext(\"2d\");\n    \n    const GAME_WIDTH = 400;\n    const GAME_HEIGHT = 600;\n\n    let score = 0;\n\n    // let restart = false;\n\n    //ctx.clearRect(0, 0, GAME_WIDTH, GAME_HEIGHT);\n\n    // let restart = false;\n\n    function start() {\n\n        // ctx.clearRect(0, 0, GAME_WIDTH, GAME_HEIGHT);\n\n        let restart = false;\n        score = 0;\n\n        let hoop = new Hoop(GAME_HEIGHT, GAME_WIDTH);\n        let ball = new Ball();\n    \n        // let hoop = new Hoop(GAME_HEIGHT, GAME_WIDTH);\n        // let ball = new Ball();\n        new Input(ball, hoop, ctx);\n\n\n        // ctx.rect(185, 350, 50, 50);\n        // ctx.fill();\n        ball.drawBall(ctx);\n        ball.drawArrow(ctx);\n\n        // console.log(ball.this.size);\n\n        let lastTime = 0;\n        function gameLoop(timestamp) {\n            // ctx.clearRect(0, 200, GAME_WIDTH, GAME_HEIGHT);\n            let deltaTime = timestamp - lastTime;\n            lastTime = timestamp;\n\n            if (ball.ypos() > 600) {\n                restart = true;\n            }\n            // console.log(ball.ypos());\n            // ball.drawBall(ctx);\n            // ball.drawArrow(ctx);\n            hoop.drawHoop(ctx);\n            hoop.updateHoop(deltaTime);\n\n            if (!restart) {\n                requestAnimationFrame(gameLoop);\n            }\n            else {\n                ctx.clearRect(0, 0, GAME_WIDTH, GAME_HEIGHT);\n                start();\n                // ball.drawBall(ctx);\n            }\n\n            // console.log(\"hey\");\n\n            // requestAnimationFrame(gameLoop);\n        }\n\n        // score = 1;\n\n        gameLoop();\n\n        // requestAnimationFrame(start);\n    }\n\n    start();\n\n    // function loop() {\n    //     if (score === 0) {\n    //         start();\n    //     }\n    //     // else {\n    //     //     console.log(score);\n    //     // }\n    //     // score = 0;\n\n    //     requestAnimationFrame(loop);\n    // }\n});"],"names":["Ball","this","position","x","y","xarrow","rot","size","speed","xspeed","yspeed","gravity","elas","afterCollSize","ctx","ball","Image","src","onload","clearRect","drawImage","strokeStyle","lineWidth","beginPath","moveTo","lineTo","stroke","drawArrow","Hoop","gameHeight","gameWidth","board","side1","side2","deltaTime","Input","hoop","shouldHandleKeyDown","document","addEventListener","event","keyCode","left","right","lastTime","gameLoop","timestamp","drawBall","shoot","speedy","ypos","ballSize","xpos","collisionSpeedy","requestAnimationFrame","getElementById","getContext","start","restart","drawHoop","updateHoop"],"sourceRoot":""}